name:                epu
version:             0.1.0.0
github:              "nnotm/epu"
license:             BSD3
author:              "Nnotm"
maintainer:          "mail.nnotm@gmail.com"
copyright:           "Copyright (c) 2018, Nnotm"

extra-source-files:
- README.md
- ChangeLog.md

# Metadata used when publishing your package
synopsis:            Emulation of 8086/8088 microprocessors
category:            Hardware

# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description:         Please see the README on Github at <https://github.com/nnotm/epu#readme>

dependencies:
- base >= 4.7 && < 5
- classy-prelude >= 1.2 && < 2
- microlens-platform >= 0.3 && < 1
- mtl >= 2.2 && < 3
- vector >= 0.12 && < 1

library:
  source-dirs: src

executables:
  epu:
    main:                Main.hs
    source-dirs:         app
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    - -Wall
    - -Wno-type-defaults
    dependencies: epu
tests:
  epu-test:
    main:                Spec.hs
    source-dirs:         test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    - -Wall
    - -Wno-type-defaults
    dependencies:
    - epu
    - hspec >= 2.2 && < 3

default-extensions:
- AutoDeriveTypeable
- BangPatterns
- BinaryLiterals
- ConstraintKinds
- DataKinds
- DefaultSignatures
- DeriveDataTypeable
- DeriveFoldable
- DeriveFunctor
- DeriveGeneric
- DeriveTraversable
- DoAndIfThenElse
- EmptyDataDecls
- ExistentialQuantification
- FlexibleContexts
- FlexibleInstances
- FunctionalDependencies
- GADTs
- GeneralizedNewtypeDeriving
- InstanceSigs
- KindSignatures
- LambdaCase
- MultiParamTypeClasses
- MultiWayIf
- NamedFieldPuns
- NoImplicitPrelude
- OverloadedStrings
- PartialTypeSignatures
- PatternGuards
- PolyKinds
- RankNTypes
- RecordWildCards
- ScopedTypeVariables
- StandaloneDeriving
- StrictData
- TupleSections
- TypeFamilies
- TypeSynonymInstances
- ViewPatterns
